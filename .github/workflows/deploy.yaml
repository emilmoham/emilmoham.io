name: Automated Release Deployment

on:
  push:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: emilmoham/emilmoham-io

jobs:
  push-to-registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: set release date
        run: |
          echo "RELEASE_DATE=$(date +'%Y%m%d')" >> ${GITHUB_ENV}

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: my-docker-hub-namespace/my-docker-hub-repository

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME}}:latest, ${{ env.IMAGE_NAME }}:${{ env.RELEASE_DATE}}
          labels: project=emilmoham.io

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  
  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: push-to-registry
    steps:
      - name: set release date
        run: |
          echo "RELEASE_DATE=$(date +'%Y%m%d')" >> ${GITHUB_ENV}
          
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: "${{ secrets.SSH_USERNAME }}"
          key: ${{ secrets.SSH_KEY }}
          port: "22"
          envs: GITHUB_SHA
          script: |
            docker stop emilmoham-io
            docker rm emilmoham-io
            docker pull ${{ env.IMAGE_NAME }}:${{ env.RELEASE_DATE }}
            docker run -p 3000:3000 --name emilmoham-io -d ${{ env.IMAGE_NAME }}:${{ env.RELEASE_DATE }}
            docker image prune -af --filter="label=project=emilmoham.io"